{
  "name": "flyingnimbustest",
  "version": "1.0.0",
  "description": "Provider-agnostic application with best practices",
  "main": "dist/index.js",
  "scripts": {
    "dev": "tsx watch src/index.ts",
    "build": "tsc && vite build",
    "build:staging": "cross-env NODE_ENV=staging npm run build",
    "build:production": "cross-env NODE_ENV=production npm run build",
    "start": "node dist/index.js",
    "test": "npm run test:bdd",
    "test:bdd": "cucumber-js",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "playwright test",
    "test:e2e:staging": "cross-env TEST_ENV=staging playwright test",
    "test:smoke:production": "cross-env TEST_ENV=production playwright test --grep @smoke",
    "test:all": "npm run test:bdd && npm run test:integration",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "backup": "./scripts/backup-feature.sh",
    "backup:feature": "./scripts/backup-feature.sh",
    "backup:before-deploy": "./scripts/backup-feature.sh before-deploy",
    "backup:checkpoint": "./scripts/backup-feature.sh checkpoint",
    "worktree:setup": "./scripts/setup-worktrees.sh",
    "worktree:status": "./check-worktrees.sh",
    "lint": "eslint . --ext .ts,.tsx,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.tsx,.js,.jsx --fix",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md,yml}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md,yml}\"",
    "type-check": "tsc --noEmit",
    "analyze": "vite-bundle-visualizer",
    "analyze:ci": "npm run build && npm run analyze",
    "security": "npm audit && snyk test",
    "update:deps": "npm-check-updates -u --target minor && npm install",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "deploy:staging": "firebase deploy --only hosting --project flyingnimbustest-staging",
    "deploy:production": "firebase deploy --only hosting --project flyingnimbustest",
    "deploy:rollback": "firebase hosting:rollback --project flyingnimbustest",
    "backup:production": "node scripts/backup.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/1JR4/flyingnimbustest-demo.git"
  },
  "keywords": [
    "firebase",
    "graphql",
    "typescript",
    "provider-agnostic"
  ],
  "author": "1JR4",
  "license": "MIT",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "dependencies": {
    "@apollo/server": "^4.10.0",
    "@hotwired/turbo": "^8.0.0",
    "@hotwired/stimulus": "^3.2.0",
    "graphql": "^16.8.1",
    "zod": "^3.22.4",
    "dotenv": "^16.4.1",
    "winston": "^3.11.0",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "express-rate-limit": "^7.1.5",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@types/node": "^20.11.0",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/bcryptjs": "^2.4.6",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.19.0",
    "@typescript-eslint/parser": "^6.19.0",
    "@cucumber/cucumber": "^10.1.0",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.6.3",
    "prettier": "^3.2.4",
    "typescript": "^5.3.3",
    "tsx": "^4.7.0",
    "tailwindcss": "^3.4.0",
    "vite": "^5.0.11",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.11",
    "ts-jest": "^29.1.1",
    "@playwright/test": "^1.41.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "cross-env": "^7.0.3",
    "npm-check-updates": "^16.14.12",
    "vite-bundle-visualizer": "^1.0.1"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml}": [
      "prettier --write"
    ]
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/src",
      "<rootDir>/tests"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/**/*.interface.ts",
      "!src/**/index.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}